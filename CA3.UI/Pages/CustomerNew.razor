@page "/customer"
@page "/customer/{id:int}"
@using CA3.DataModels
@using CA3.UI.Services
@using System.Net
@inject ICustomerService _customerService;
@inject NavigationManager NavigationManager

@code {
	[Parameter]
	public int? Id { get; set; }

	Customer customer = new();

	string btnText = string.Empty;

	protected override void OnInitialized()
	{
		btnText = Id == null ? "Save New Customer" : "Update Customer";
	}

	protected override async Task OnParametersSetAsync()
	{
		if (Id is not null)
		{
			var result = await _customerService.GetCustomerById((int)Id);
			if (result is not null)
				customer = result;
			else
				NavigationManager.NavigateTo("/customer");
		}
	}

	async Task HandleSubmit()
	{
		if (Id is null)
		{
			var response = await _customerService.CreateCustomer(customer);
			if (response.StatusCode == HttpStatusCode.Created)
			{
				NavigationManager.NavigateTo("/customers");
			}
			//
		}
		else
		{
			var response = await _customerService.UpdateCustomer((int)Id, customer);
			if (response.StatusCode == HttpStatusCode.NoContent)
			{
				NavigationManager.NavigateTo("/customers");
			}
		}

	}

	async Task DeleteCustomer()
	{
		var response = await _customerService.DeleteCustomer(customer.CustomerId);
		if (response.StatusCode == HttpStatusCode.NoContent)
		{
			NavigationManager.NavigateTo("/customers");
		}
	}

	void ShowOrder(int id)
	{
		NavigationManager.NavigateTo($"order/{customer.CustomerId}/{id}");
	}

	void CreateNewOrder()
	{
		NavigationManager.NavigateTo($"/order/{customer.CustomerId}");
	}
}

@if (Id is null)
{
	<PageTitle>Create a new Customer</PageTitle>
	<h3>Create a new Customer</h3>
}
else
{
	<PageTitle>Edit ID[@customer.CustomerId]</PageTitle>

}

<EditForm Model="customer" OnSubmit="HandleSubmit">
	<div>
		<label for="FirstName">First Name</label>
		<InputText id="FirstName" style="width: 300px;" @bind-Value="@customer.FirstName" class="form-control" />
	</div>
	<div>
		<label for="LastName">Last Name</label>
		<InputText id="LastName" style="width: 300px;" @bind-Value="@customer.LastName" class="form-control" />
	</div>
	<div>
		<label for="DateOfBirth">Date Of Birth</label>
		<InputText id="DateOfBirth" style="width: 300px;" @bind-Value="@customer.DateOfBirth" class="form-control" />
	</div>
	<div>
		<label for="AnnualSpend">Annual Spend</label>
		<InputNumber id="AnnualSpend" style="width: 150px;" @bind-Value="@customer.AnnualSpend" class="form-control" />
	</div>
	<br />
	<button type="submit" class="btn btn-primary">@btnText</button>
	@if (Id is not null)
	{
		<button type="button" class="btn btn-danger" @onclick="DeleteCustomer">
			Delete Customer
		</button>
	}

</EditForm>

@if (Id is not null)
{
	<br />
	<br />
	<h3>Orders</h3>
	<table class="table">
		<thead>
			<tr>
				<th>
					Order ID
				</th>
				<th>
					Date
				</th>
				<th>
				</th>
			</tr>
		</thead>
		<tbody>

			@if (customer.Orders.Count > 0)
			{
				@foreach (var item in customer.Orders)
				{
					<tr>
						<td>@item.OrderId</td>
						<td>@item.Date</td>

						<td>
							<button class="btn btn-primary" @onclick="(() => ShowOrder((int)item.OrderId))">
								<i class="oi oi-pencil"></i>
							</button>
						</td>
					</tr>
				}
			}
			else
			{
				<tr>
					No Data Found
				</tr>
			}


		</tbody>
	</table>
	<button class="btn btn-primary" @onclick="CreateNewOrder">
		Create New Order
	</button>

}